[project]
name = "two-d-game-ai"
version = "0.7.0"
description = ""
authors = [
    {name="elliot-100", email="<3186037+elliot-100@users.noreply.github.com>"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "pygame-ce>=2.5.0"
]

[tool.poetry.dependencies]
python = ">=3.11, <4"
# pydoclint dep docstring-parser-fork requires python < 4

[tool.poetry.group.dev.dependencies]
invoke = "^2.2.0"
mypy = "^1.15.0"
pdoc = "^15.0.3"
pre-commit = "^4.2.0"
pydoclint = "^0.6.6"
pydoctest = "^0.2.1"
pytest = "^8.3.5"
ruff = "^0.11.8"

[tool.mypy]
strict = true
## Disallow dynamic typing:
##   Disallow the use of the dynamic 'Any' type under certain conditions.
disallow_any_unimported = true  # additional to 'strict' config
## None and Optional handling:
##   Adjust how values of type 'None' are handled.
no_implicit_optional = true  # additional to 'strict' config
## Configuring warnings:
##   Detect code that is sound but redundant or problematic.
warn_unreachable = true  # additional to 'strict' config
## Configuring error messages:
##   Adjust the amount of detail shown in error messages.
show_error_codes = true  # additional to 'strict' config
pretty = true  # additional to 'strict' config

[tool.pydoclint]
style = 'numpy'
arg-type-hints-in-signature = true
arg-type-hints-in-docstring = false

[tool.ruff.lint]
select = ["ALL"]

ignore = [
    # Rules that conflict with Ruff formatter:
    "COM812",  # Trailing comma missing
    "ISC001",  # Implicitly concatenated string literals on one line
    # Other:
    "D105",  # Missing docstring in magic method
    "D205",  # 1 blank line required between summary line and description
    "S311",  # Standard pseudo-random generators are not suitable for cryptographic purposes
    "FIX002", "TD002", "TD003",  # TODO related
]

# Allow applying these 'unsafe' fixes without the `--unsafe-fixes` flag:
extend-safe-fixes = [
    "TCH001",  # Move import into a type-checking block
    "TCH003",  # Move standard library import into a type-checking block
    "TCH004",  # Move import out of type-checking block
]

[tool.ruff.lint.per-file-ignores]
# Not relevant in tests:
"tests/*" = [
    "PLR2004",  # Magic value used in comparison
    "S101",  # Use of assert detected
    "SLF001",  # Private member accessed
]
# Ignore rules for Invoke command-line tooling:
"tasks.py" = [
    "ANN401",  # Dynamically typed expressions (typing.Any)
    "T201",  # `print` found
]
## Special cases for top-level documentation:
"two_d_game_ai/__init__.py" = [
    "D400",  # First line should end with a period
]
# Non-packages:
"examples/*" = [
    "INP001",  # ...part of an implicit namespace package. Add an `__init__.py`.
]

[tool.ruff.lint.pylint]
max-args = 7

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
